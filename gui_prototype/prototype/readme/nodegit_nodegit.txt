b'NodeGit\n-------\n\n> Node bindings to the [libgit2](http://libgit2.github.com/) project.\n\n<table>\n  <thead>\n    <tr>\n      <th>Linux</th>\n      <th>OS X</th>\n      <th>Windows</th>\n      <th>Coverage</th>\n      <th>Dependencies</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td colspan="2" align="center">\n        <a href="https://travis-ci.org/nodegit/nodegit"><img src="https://api.travis-ci.org/nodegit/nodegit.svg?branch=master"></a>\n      </td>\n      <td align="center">\n        <a href="https://ci.appveyor.com/project/timbranyen/nodegit"><img src="https://ci.appveyor.com/api/projects/status/e5a5q75l9yfhnfv2?svg=true"></a>\n      </td>\n      <td align="center">\n        <a href="https://coveralls.io/r/nodegit/nodegit"><img src="https://coveralls.io/repos/nodegit/nodegit/badge.svg" alt="Coverage Status"></a>\n      </td>\n      <td align="center">\n        <a href="https://david-dm.org/nodegit/nodegit"><img src="https://david-dm.org/nodegit/nodegit.svg"></a>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n**Stable (libgit2#master): 0.16.0**\n**Stable (libgit2@0.24): 0.14.1**\n\n## Have a problem? Come chat with us! ##\n\nhttps://libgit2.slack.com/\n\n## Maintained by ##\nTim Branyen [@tbranyen](http://twitter.com/tbranyen),\nJohn Haley [@johnhaley81](http://twitter.com/johnhaley81), and\nMax Korp [@maxkorp](http://twitter.com/MaximilianoKorp) with help from tons of\n[awesome contributors](https://github.com/nodegit/nodegit/contributors)!\n\n### Alumni Maintainers ###\nSteve Smith [@orderedlist](https://twitter.com/orderedlist),\nMichael Robinson [@codeofinterest](http://twitter.com/codeofinterest), and\nNick Kallen [@nk](http://twitter.com/nk)\n\n## API Documentation. ##\n\n[http://www.nodegit.org/](http://www.nodegit.org/)\n\n## Getting started. ##\n\nNodeGit will work on most systems out-of-the-box without any native\ndependencies.\n\n``` bash\nnpm install nodegit\n```\n\nIf you receive errors about libstdc++, which are commonly experienced when\nbuilding on Travis-CI, you can fix this by upgrading to the latest\nlibstdc++-4.9.\n\nIn Ubuntu:\n\n``` sh\nsudo add-apt-repository ppa:ubuntu-toolchain-r/test\nsudo apt-get update\nsudo apt-get install libstdc++-4.9-dev\n```\n\nIn Travis:\n\n``` yaml\naddons:\n  apt:\n    sources:\n      - ubuntu-toolchain-r-test\n    packages:\n      - libstdc++-4.9-dev\n```\n\nIn CircleCI:\n\n``` yaml\n  dependencies:\n    pre:\n      - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test\n      - sudo apt-get update\n      - sudo apt-get install -y libstdc++-4.9-dev\n```\n\nIf you are still encountering problems while installing, you should try the\n[Building from source](http://www.nodegit.org/guides/install/from-source/)\ninstructions.\n\n## API examples. ##\n\n### Cloning a repository and reading a file: ###\n\n``` javascript\nvar Git = require("nodegit");\n\n// Clone a given repository into the `./tmp` folder.\nGit.Clone("https://github.com/nodegit/nodegit", "./tmp")\n  // Look up this known commit.\n  .then(function(repo) {\n    // Use a known commit sha from this repository.\n    return repo.getCommit("59b20b8d5c6ff8d09518454d4dd8b7b30f095ab5");\n  })\n  // Look up a specific file within that commit.\n  .then(function(commit) {\n    return commit.getEntry("README.md");\n  })\n  // Get the blob contents from the file.\n  .then(function(entry) {\n    // Patch the blob to contain a reference to the entry.\n    return entry.getBlob().then(function(blob) {\n      blob.entry = entry;\n      return blob;\n    });\n  })\n  // Display information about the blob.\n  .then(function(blob) {\n    // Show the path, sha, and filesize in bytes.\n    console.log(blob.entry.path() + blob.entry.sha() + blob.rawsize() + "b");\n\n    // Show a spacer.\n    console.log(Array(72).join("=") + "\\n\\n");\n\n    // Show the entire file.\n    console.log(String(blob));\n  })\n  .catch(function(err) { console.log(err); });\n\n```\n\n### Emulating git log: ###\n\n``` javascript\nvar Git = require("nodegit");\n\n// Open the repository directory.\nGit.Repository.open("tmp")\n  // Open the master branch.\n  .then(function(repo) {\n    return repo.getMasterCommit();\n  })\n  // Display information about commits on master.\n  .then(function(firstCommitOnMaster) {\n    // Create a new history event emitter.\n    var history = firstCommitOnMaster.history();\n\n    // Create a counter to only show up to 9 entries.\n    var count = 0;\n\n    // Listen for commit events from the history.\n    history.on("commit", function(commit) {\n      // Disregard commits past 9.\n      if (++count >= 9) {\n        return;\n      }\n\n      // Show the commit sha.\n      console.log("commit " + commit.sha());\n\n      // Store the author object.\n      var author = commit.author();\n\n      // Display author information.\n      console.log("Author:\\t" + author.name() + " <" + author.email() + ">");\n\n      // Show the commit date.\n      console.log("Date:\\t" + commit.date());\n\n      // Give some space and show the message.\n      console.log("\\n    " + commit.message());\n    });\n\n    // Start emitting events.\n    history.start();\n  });\n```\n\nFor more examples, check the `examples/` folder.\n\n## Unit tests. ##\n\nYou will need to build locally before running the tests.  See above.\n\n``` bash\nnpm test\n```\n'