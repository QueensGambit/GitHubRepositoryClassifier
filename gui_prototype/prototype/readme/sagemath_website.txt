b'# Sagemath.org Website[![Build Status](https://travis-ci.org/sagemath/website.svg?branch=master)](https://travis-ci.org/sagemath/website)\n\n\nThe `src` contains the sources for the files,\nthey are rendered to fill-in the blanks for the templates\nand the output is placed into `www`.\n\nThere are various support scripts for processing the data sources\nand a `makefile` to help working with it.\n\nGetting Started\n---------------\n\nMake sure to not only clone from here or your fork,\nbut also to initialize all\n[submodules](http://git-scm.com/book/en/Git-Tools-Submodules).\n\n    git clone --recursive git@github.com:sagemath/website.git\n\nor if you forgot the `--recursive` switch, do this:\n\n    git submodule update --init --recursive\n\nLater, don\'t forget to not only update the `website` project,\nbut also the submodules\n(or whatever it is the right thing to do).\nFor example:\n\n    git submodule foreach "git checkout master; git pull origin master"\n\n### Ubuntu Packages\n\nTo get started on Ubuntu:\n\n    sudo apt-get install -y pybtex python-jinja2 python-markdown python-yaml\n\nDevelopment\n-----------\n\nThe websites needs various data-sources to build its pages.\nFor example, the publications pages use HTML snippets\ngenerated by the `publications` submodule.\n\nIdeally, a courageous `make` should do everything for you\nand and additional `make open` opens up your web-browser\nto inspect the result.\n\nTo test the website under realistic conditions,\n`make server` starts a minimal HTTP server on port 8181 and\n`make show` opens it in your web-browser.\n\n### NQ8 Images\n\nShrinking PNG images further down via e.g.\n\n    pngnq -v -f -s 64 index_icons.png\n\n\n### Continuous Build Mode\n\nFor your convenience, there is a continuous build mode available: `make cont`\n\nIt depends on\n\n* [pyInotify](https://github.com/seb-m/pyinotify) - `pip install --user pyinotify` -\n  to pick up any changes in your local file-system.\n\n* [xdotool](http://www.semicomplete.com/projects/xdotool/) - `apt-get install xdotool` -\n  which does reload the open tab in your web-browser (by sending `Shift+Ctrl+R`).\n\nTheir combined effect is, that less than a second after you "save" a file,\nyou can see the result without lifting a finger.\n\nStyle\n-----\n\n* HTML: Modern HTML5, but nothing too fancy please.\n  One of the main design goals is that everything should still work\n  without Javascript and no Flash.\n\n* Python: PEP8 is authoritative for various Python scripts -- except E501 (long lines).\n  Just make sure your `pep8` and `autopep8` is up-to-date and\n  do a healthy `make style` to clean up your code before you commit.\n\nLicense\n-------\n\nThe actual content and included media files are licensed under\n[CC BY-SA 4.0](http://creativecommons.org/licenses/by-sa/4.0/)\nlike the rest of the Sage documentation pages.\n\nThe included scripts have their appropriate licensing\nexplained at the top of their respective source files.\nIf no licensing information can be found,\nregard it as [Apache 2.0](http://www.apache.org/licenses/LICENSE-2.0.html).\n\n### markerclusterer.js\n\nThat\'s copied from https://github.com/googlemaps/js-marker-clusterer\n\n\nGoogle Cloud Storage Notes\n--------------------------\n\n* RSync: `gsutil -m rsync -d -r www gs://www.sagemath.org`\n* Publish all files: `gsutil -m acl ch -r -u AllUsers:R gs://www.sagemath.org`\n* Cache-Control 10 minutes: `gsutil -m setmeta -r -h "Cache-Control:public, max-age=600" gs://www.sagemath.org`\n'