b'= Spring Boot image:https://build.spring.io/plugins/servlet/buildStatusImage/BOOT-PUB["Build Status", link="https://build.spring.io/browse/BOOT-PUB"] image:https://badges.gitter.im/Join Chat.svg["Chat",link="https://gitter.im/spring-projects/spring-boot?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge"]\n:docs: http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference\n\nSpring Boot makes it easy to create Spring-powered, production-grade applications and\nservices with absolute minimum fuss. It takes an opinionated view of the Spring platform\nso that new and existing users can quickly get to the bits they need.\n\nYou can use Spring Boot to create stand-alone Java applications that can be started using\n`java -jar` or more traditional WAR deployments. We also provide a command line tool\nthat runs spring scripts.\n\nOur primary goals are:\n\n* Provide a radically faster and widely accessible getting started experience for all\nSpring development\n* Be opinionated out of the box, but get out of the way quickly as requirements start to\ndiverge from the defaults\n* Provide a range of non-functional features that are common to large classes of projects\n(e.g. embedded servers, security, metrics, health checks, externalized configuration)\n* Absolutely no code generation and no requirement for XML configuration\n\n\n\n== Installation and Getting Started\nThe {docs}/htmlsingle/[reference documentation] includes detailed\n{docs}/htmlsingle/#getting-started-installing-spring-boot[installation instructions]\nas well as a comprehensive {docs}/htmlsingle/#getting-started-first-application[``getting\nstarted``] guide. Documentation is published in {docs}/htmlsingle/[HTML],\n{docs}/pdf/spring-boot-reference.pdf[PDF] and {docs}/epub/spring-boot-reference.epub[EPUB]\nformats.\n\nHere is a quick teaser of a complete Spring Boot application in Java:\n\n[source,java,indent=0]\n----\n\timport org.springframework.boot.*;\n\timport org.springframework.boot.autoconfigure.*;\n\timport org.springframework.web.bind.annotation.*;\n\n\t@RestController\n\t@SpringBootApplication\n\tpublic class Example {\n\n\t\t@RequestMapping("/")\n\t\tString home() {\n\t\t\treturn "Hello World!";\n\t\t}\n\n\t\tpublic static void main(String[] args) throws Exception {\n\t\t\tSpringApplication.run(Example.class, args);\n\t\t}\n\n\t}\n----\n\n\n\n== Getting help\nHaving trouble with Spring Boot? We\'d like to help!\n\n* Check the {docs}/htmlsingle/[reference documentation], especially the\n  {docs}/htmlsingle/#howto[How-to\'s] -- they provide solutions to the most common\n  questions.\n* Learn the Spring basics -- Spring Boot builds on many other Spring projects, check\n  the http://spring.io[spring.io] web-site for a wealth of reference documentation. If\n  you are just starting out with Spring, try one of the http://spring.io/guides[guides].\n* Ask a question - we monitor http://stackoverflow.com[stackoverflow.com] for questions\n  tagged with http://stackoverflow.com/tags/spring-boot[`spring-boot`].\n* Report bugs with Spring Boot at https://github.com/spring-projects/spring-boot/issues[github.com/spring-projects/spring-boot/issues].\n\n\n\n== Reporting Issues\nSpring Boot uses GitHub\'s integrated issue tracking system to record bugs and feature\nrequests. If you want to raise an issue, please follow the recommendations below:\n\n* Before you log a bug, please https://github.com/spring-projects/spring-boot/search?type=Issues[search the issue tracker]\n  to see if someone has already reported the problem.\n* If the issue doesn\'t already exist, https://github.com/spring-projects/spring-boot/issues/new[create a new issue].\n* Please provide as much information as possible with the issue report, we like to know\n  the version of Spring Boot that you are using, as well as your Operating System and\n  JVM version.\n* If you need to paste code, or include a stack trace use Markdown +++```+++ escapes\n  before and after your text.\n* If possible try to create a test-case or project that replicates the issue. You can\n  submit sample projects as pull-requests against the\n  https://github.com/spring-projects/spring-boot-issues[spring-boot-issues] GitHub\n  project. Use the issue number for the name of your project.\n\n\n\n== Building from Source\nYou don\'t need to build from source to use Spring Boot (binaries in\nhttp://repo.spring.io[repo.spring.io]), but if you want to try out the latest and\ngreatest, Spring Boot can be easily built with the\nhttps://github.com/takari/maven-wrapper[maven wrapper]. You also need JDK 1.8 (although\nBoot applications can run on Java 1.6).\n\n[indent=0]\n----\n\t$ ./mvnw clean install\n----\n\nIf you want to build with the regular `mvn` command, you will need\nhttp://maven.apache.org/run-maven/index.html[Maven v3.2.1 or above].\n\nNOTE: You may need to increase the amount of memory available to Maven by setting\na `MAVEN_OPTS` environment variable with the value `-Xmx512m`. Remember\nto set the corresponding property in your IDE as well if you are building and running\ntests there (e.g. in Eclipse go to `Preferences->Java->Installed JREs` and edit the\nJRE definition so that all processes are launched with those arguments). This property\nis automatically set if you use the maven wrapper.\n\n_Also see link:CONTRIBUTING.adoc[CONTRIBUTING.adoc] if you wish to submit pull requests,\nand in particular please fill out the\nhttps://support.springsource.com/spring_committer_signup[Contributor\'s Agreement]\nbefore your first change, however trivial. (Or if you filed such an agreement already for\nanother project just mention that in your pull request.)_\n\n=== Building reference documentation\n\nThe reference documentation requires the documentation of the Maven plugin to be\navailable so you need to build that first since it\'s not generated by default.\n\n[indent=0]\n----\n\t$ ./mvnw clean install -pl spring-boot-tools/spring-boot-maven-plugin -Pdefault,full\n----\n\nThe documentation also includes auto-generated information about the starters. To\nallow this information to be collected, the starter projects must be built first:\n\n[indent=0]\n----\n\t$ ./mvnw clean install -f spring-boot-starters\n----\n\nOnce this is done, you can build the reference documentation with the command below:\n\n[indent=0]\n----\n\t$ ./mvnw clean prepare-package -pl spring-boot-docs -Pdefault,full\n----\n\nTIP: The generated documentation is available from `spring-boot-docs/target/contents/reference`\n\n\n== Modules\nThere are a number of modules in Spring Boot, here is a quick overview:\n\n\n\n=== spring-boot\nThe main library providing features that support the other parts of Spring Boot,\nthese include:\n\n* The `SpringApplication` class, providing static convenience methods that make it easy\nto write a stand-alone Spring Application. Its sole job is to create and refresh an\nappropriate Spring `ApplicationContext`\n* Embedded web applications with a choice of container (Tomcat or Jetty for now)\n* First class externalized configuration support\n* Convenience `ApplicationContext` initializers, including support for sensible logging\ndefaults\n\n\n\n=== spring-boot-autoconfigure\nSpring Boot can configure large parts of common applications based on the content\nof their classpath. A single `@EnableAutoConfiguration` annotation triggers\nauto-configuration of the Spring context.\n\nAuto-configuration attempts to deduce which beans a user might need. For example, If\n`HSQLDB` is on the classpath, and the user has not configured any database connections,\nthen they probably want an in-memory database to be defined. Auto-configuration will\nalways back away as the user starts to define their own beans.\n\n\n\n=== spring-boot-starters\nStarters are a set of convenient dependency descriptors that you can include in\nyour application. You get a one-stop-shop for all the Spring and related technology\nthat you need without having to hunt through sample code and copy paste loads of\ndependency descriptors. For example, if you want to get started using Spring and JPA for\ndatabase access just include the `spring-boot-starter-data-jpa` dependency in your\nproject, and you are good to go.\n\n\n\n=== spring-boot-cli\nThe Spring command line application compiles and runs Groovy source, making it super\neasy to write the absolute minimum of code to get an application running. Spring CLI\ncan also watch files, automatically recompiling and restarting when they change.\n\n\n\n=== spring-boot-actuator\nSpring Boot Actuator provides additional auto-configuration to decorate your application\nwith features that make it instantly deployable and supportable in production.  For\ninstance if you are writing a JSON web service then it will provide a server, security,\nlogging, externalized configuration, management endpoints, an audit abstraction, and\nmore. If you want to switch off the built in features, or extend or replace them, it\nmakes that really easy as well.\n\n\n\n=== spring-boot-loader\nSpring Boot Loader provides the secret sauce that allows you to build a single jar file\nthat can be launched using `java -jar`. Generally you will not need to use\n`spring-boot-loader` directly, but instead work with the\nlink:spring-boot-tools/spring-boot-gradle-plugin[Gradle] or\nlink:spring-boot-tools/spring-boot-maven-plugin[Maven] plugin.\n\n\n\n== Samples\nGroovy samples for use with the command line application are available in\nlink:spring-boot-cli/samples[spring-boot-cli/samples]. To run the CLI samples type\n`spring run <sample>.groovy` from samples directory.\n\nJava samples are available in link:spring-boot-samples[spring-boot-samples] and should\nbe built with maven and run by invoking `java -jar target/<sample>.jar`.\n\n\n\n== Guides\nThe http://spring.io/[spring.io] site contains several guides that show how to use Spring\nBoot step-by-step:\n\n* http://spring.io/guides/gs/spring-boot/[Building an Application with Spring Boot] is a\n  very basic guide that shows you how to create a simple application, run it and add some\n  management services.\n* http://spring.io/guides/gs/actuator-service/[Building a RESTful Web Service with Spring\n  Boot Actuator] is a guide to creating a REST web service and also shows how the server\n  can be configured.\n* http://spring.io/guides/gs/convert-jar-to-war/[Converting a Spring Boot JAR Application\n  to a WAR] shows you how to run applications in a web server as a WAR file.\n\n\n\n== License\nSpring Boot is Open Source software released under the\nhttp://www.apache.org/licenses/LICENSE-2.0.html[Apache 2.0 license].\n'