b"# Foursquare Fsq.io\n### All of Foursquare's open source code in a single repo.\n\n[![Build Status](https://travis-ci.org/foursquare/fsqio.svg?branch=master)](https://travis-ci.org/foursquare/fsqio)\n\nAll Foursquare code lives in a single repository, an architecture generally called a monorepo.\n`Fsq.io` is a subset of that internal monorepo. `Fsq.io` holds many of Foursquare's\nopen source projects that had previously lived in their own separate Github repos. Foursquare contributes\nto a build tool specifically designed to work with monorepos called [Pants](https://pantsbuild.github.io/).\nThe entire `Fsq.io` repo is is built and tested by Pants.\n\nDeploying directly from our monorepo has some nice advantages, for consumers of our open source projects as\nwell as Foursquare itself. The entire repo is built daily by our CIs and internal contributions are open sourced\nautomatically without the overhead of publishing. This repo will always contain the latest code that we use\ninternally, all of the tools can be built just as we use them, directly from HEAD.\n\n## Projects include:\n* [Exceptionator](https://github.com/foursquare/fsqio/tree/master/src/jvm/io/fsq/exceptionator):\nAn exception aggregator using mongodb.\n* [Fhttp](https://github.com/foursquare/fsqio/tree/master/src/jvm/io/fsq/fhttp):\nA request building interface similar to scalaj-http for Finagle http clients.\n* [Pants pom-resolve](https://github.com/foursquare/fsqio/tree/master/src/python/fsqio/pants/pom):\nA drop-in Python replacement for the Pants ivy resolver.\n* [Rogue](https://github.com/foursquare/fsqio/tree/master/src/jvm/io/fsq/rogue): A Scala DSL for MongoDB\n* [Spindle](https://github.com/foursquare/fsqio/tree/master/src/jvm/io/fsq/spindle): A Scala code generator for Thrift\n* [Twofishes](https://github.com/foursquare/fsqio/tree/master/src/jvm/io/fsq/twofishes):\nA coarse, splitting geocoder and reverse geocoder in Scala\n* and others.\n\n\n## Requirements\n\n* JDK 1.8 (1.8.0_40 preferred)\n* python2.6+ (2.7 preferred)\n* postgresql\n* [monogdb server](https://docs.mongodb.org/manual/tutorial/install-mongodb-on-os-x/) (required to pass some tests)\n* An increased number of file descriptors (we use 32768)\n\nInternally we use OSX Yosemite or later. Other OS may work but are officially unsupported. (_Unofficially_, if\nbuilding on Linux you should install `python-dev`, `build-essential`, and `libpq-dev` in addition to the above).\n\n\n## Pants build system\nPants is a build system that works particularly well for a source code workspace containing many\ndistinct but interdependent pieces.\n\nPants is similar to `make`, `maven`, `ant`, `gradle`, `sbt`, etc. but pants pursues different design goals.\nPants optimizes for:\n\n* building multiple, dependent things from source\n* building code in a variety of languages\n* speed of build execution\n\nPants is a true community project, with major contributions from Twitter, Foursquare, Square, among other\ncompanies and independent contributors. It has friendly documentation [here](https://pantsbuild.github.io),\nin this README we will just touch on how to compile and test the code.\n\n\n## Compiling and Testing\n#### First Run\nThe first run will take a long time as\n[pom-resolve](https://github.com/foursquare/fsqio/tree/master/src/python/fsqio/pants/pom)\n(our custom resolver for 3rdparty dependencies) computes the project graph and downloads the dependencies.\nMaybe as long as 15-20 mins! A good first run is to get this out of the way:\n\n     ./pants pom-resolve\n\n#### Targets and BUILD files\nTargets are adressable project or dependency level modules that can be built by Pants. `BUILD` files are\nconfiguration files that define targets that can be built by Pants. Each target has a name and can be built\nby running a Pants task against the target's name and location.\n\nFor example, Fsq.io's JVM projects live under `src/jvm`\n[here](https://github.com/foursquare/fsqio/tree/master/src/jvm/io/fsq). You can compile Rogue by running:\n\n     ./pants compile src/jvm/io/fsq/rogue:rogue\n\n#### Build and Test every project\nAdding a `::` to a path will glob every target under that location. So to compile every target in Fsq.io:\n\n     ./pants compile src::\n\nSimilarly, to run all the tests, (after starting the mongodb server):\n\n    ./pants test test::\n\nProjects aspirationally have READMEs at the project root.\n\n## Acknowledgements\n\n* Thanks to the great community supporting [Pants](https://github.com/pantsbuild/pants).\n* Fsq.io is split from commits to our internal monorepo by [Sapling](https://github.com/jsirois/sapling),\na git porcelain tool by @jsirois.\n\n## Discussion\n\nPlease open an issue if you have any questions or concerns.\n\n## License\nApache License, Version 2.0 (Apache-2.0)\n"