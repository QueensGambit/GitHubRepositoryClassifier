b'# Write Free Science Books to Get Famous Website\n\nDream: live in a world where you can learn mathematics, physics, chemistry, biology and engineering from perfect open source books made for free by people who want to get famous to get better paying jobs.\n\nThis is just a wacky project idea right now, there is no implementation, nor business model.\n\nMethod: a crash between:\n\n- Stack Overflow gamification\n- GitHub-like pull requests. Not anyone can edit anything like Wikipedia madness, but you *can* make your own copy (fork), and a precise a suggestion.\n- Wikipedia. Imagine if you could link up-votable application examples to the page of a Mathematics theorem.\n- page rank-like algorithm for user reputation, including a per-tag reputation (which user knows more about mathematics?) and content recommendation (what are the best articles about a given subject?)\n\nVery early stage prototype(s):\n\n- <https://github.com/cirosantilli/free-books-django-raw>\n\n## Intro\n\nConsider a [Stack-Overflow]()-like Q&A website:\n\n- there are questions and answers\n- questions have tags, e.g. programming languages like `C`, `C++`, `Java`\n- users have a reputation measure. If you upvote someone\'s question or answer, his reputation increases. You need 15 reputation to upvote someone.\n\nBut Stack Overflow\'s reputation system sucks because:\n\n- it the living ultimate god of `C++` upvotes you, you get `10` reputation\n- if the first-day newb of `Java` upvotes you, you also get `10` reputation\n\nWe want to improve Stack Overflow\'s simplistic linear reputation system to determine who is the user who knows the most about a given tag.\n\nFundamental requirement: a Google PageRank-like algorithm (Eigenvalue based) such that:\n\n-   everyone has one reputation per tag\n-   if someone with high rep on a given tag upvotes you, you get a lot of reputation on that tag. More than you would get from someone with low reputation on that tag.\n\nOptional but very desirable requirements:\n\n-   users can upvote tags on a given question to say: "I agree that this question deserves this tag".\n\n    The vote of users with higher rep on the tag should count more.\n\n-   each time you upvote the same given person, it has less positive impact on his reputation for that tag.\n\n    This would counter voting fraud, e.g. of close groups of friends which upvote each other a lot.\n\nAnother problem this would solve: multiple site split silliness: <http://meta.stackoverflow.com/questions/271989/does-it-pay-to-spin-off-sites> Since there is no human moderation, only algorithms, splitting websites makes no sense.\n\n## Extra problems\n\n### Original research vs explanations\n\nHow to determine if something is "original research" or not?\n\nE.g.: a genius discovers something and publishes it really badly explained.\n\nSomeone less intelligent comes, explains it better, and gets widely read.\n\nOr someone who just posts a bunch of links to good sources.\n\n### Post age\n\nPost metrics on Stack Overflow also suck: the post with most upvotes goes up and that is it.\n\nIt would be cool to give a boost to recent posts that got lots of upvotes.\n\nThey can\'t beat the older ones in total upvotes, but the upvote rate is a strong indicator of quality.\n\n- http://meta.stackexchange.com/questions/125455/sorting-new-answers-to-old-questions?rq=1\n- http://meta.stackexchange.com/questions/6662/how-to-give-some-boost-to-some-really-good-answers-that-arrive-late?rq=1\n- http://meta.stackexchange.com/questions/15805/how-can-we-make-good-answers-to-old-questions-float-to-the-top\n- http://meta.stackoverflow.com/questions/272570/how-to-deal-with-hugely-upvoted-bad-and-outdated-answers\n\nDoes Google consider post date?\n\n- https://www.quora.com/When-Google-indexes-a-page-does-it-consider-that-pages-creation-date-when-it-comes-to-PR-computation\n\n### User trusts user\n\nIt would be cool for a user to say: I trust this other user on given tags / all tags.\n\nMaybe this is required. E.g., given a real network, a bot network could make an exact copy of it, and that should have the same reputation as the real one.\n\nSuch relations make per-user score of other users / posts even more important.\n\n### Per user score of all other users\n\nRate how much one user likes other users based on his actions.\n\nE.g.: someone who only upvotes C questions will give score 0 for someone with only Java questions.\n\n### Tag duplicates\n\nHow to mark tags `java` and `Java` as being duplicates without moderators?\n\nPossible solution: everyone can mark tags as duplicate.\n\nOnce you mark tags as duplicate, if you search for one, you will see both.\n\n### Pull request disagreements\n\nWhat happens if:\n\n- the writter of an answer dies, and someone makes a great pull request to his answer with 1M upvotes?\n- 50% of users agree with a pull request, 50% don\'t?\n\nPossible solution:\n\n- next to each answer, have a list of forks\n- everyone can mark an answer as the "best version" or just upvote the pull requests\n\n## Testing: a difficulty\n\nWhile it is possible to download all public data from Stack overflow in dumps, this algorithms would need private information like who upvoted what.\n\nSo generating meaningful test data would be a problem in itself.\n\n## Research\n\n- http://meta.stackexchange.com/questions/98141/ranking-users-similar-to-page-rank\n- http://meta.stackexchange.com/questions/64938/doesnt-science-have-a-better-reputation-system-than-stack-overflow\n- http://meta.stackexchange.com/questions/103735/modified-h-index-for-questions-and-answers\n\nSoftware:\n\n-   http://www.bibsonomy.org/\n    - https://bitbucket.org/bibsonomy/bibsonomy\n    - http://www2007.org/workshops/paper_25.pdf\n-   https://github.com/networkx/networkx Python, does a lot of other graph things\n\nStackApps:\n\n- http://stackapps.com/questions/6520/skillrep-experiment-in-computing-a-skill-focused-reputation\n- http://stackapps.com/questions/6298/stackrating-tracks-skill-of-stack-overflow-users\n\nGeneral reputation systems:\n\n- https://en.wikipedia.org/wiki/Reputation_system\n- https://en.wikipedia.org/wiki/Bibliometrics\n- https://en.wikipedia.org/wiki/Network_theory#Link_analysis\n\nConcept maps:\n\n- http://conceptnet5.media.mit.edu/\n\nSocial network:\n\n-   <https://en.wikipedia.org/wiki/Ts\xc5\xab_(social_network)>\n    - <http://www.tsu.co/>\n    - shares 90% ad revenue with content creators\n-   <http://www.synereo.com/whitepapers/synereo.pdf#subsection.2.2.2> distributed social network, seems to use quality metrics to determine how much content will be hosted from each person?\n    - paper <http://www.synereo.com/whitepapers/synereo.pdf#subsection.2.2.2>\n    - TODO open source? <https://github.com/synereo> Where is the source?\n    - Where does their money come from? When will it launch?\n- SocialSwarm\n- Diaspora\n\n### PageRank\n\nImplementations:\n\n-   https://github.com/louridas/pagerank C++\n-   https://github.com/dcadenas/rankable_graph Ruby\n-   https://github.com/dcadenas/pagerank/ Go, port of rankable_graph\n-   https://github.com/frankmcsherry/pagerank\n\nMathematical problem: make a stochastic matrix graph where each entry equals:\n\n- `(1 / n_links)` if there is a link going out\n- `0` otherwise\n\nNow calculate the steady state of the Markov process: <https://en.wikipedia.org/wiki/Markov_chain#Steady-state_analysis_and_limiting_distributions> which is the same as calculating the eigenvector.\n\nConvergence of simple interactive algorithm: stochastic link matrix M iff M is both: (TODO proof):\n\n-   irreducible: definition: no strongly connected components smaller than the entire matrix. You can get from any place to any place.\n\n    Or in other words, there are no sets of pages from which the surfer cannot escape. One example of this is a page without any outgoing links.\n\n    http://drops.dagstuhl.de/volltexte/2007/1072/pdf/07071.VignaSebastiano.Paper.1072.pdf the damping factor can be interpreted as a probability that the random surfer will jump to a random page. It solves in particular the problem if the page has no outgoing links.\n\n    If is the same as adding a `dumping_factor / total_n_pages` to every element of he matrix, and multiplying the actual matrix by `1 - damping_factor`.\n\n    1 is always the largest eigenvalue http://math.stackexchange.com/questions/40320/proof-that-the-largest-eigenvalue-of-a-stochastic-matrix-is-1 wit Looks like 1 is the only eigenvalue: <http://math.stackexchange.com/questions/351142/why-markov-matrices-always-have-1-as-an-eigenvalue>\n\n    Existence of a single largest real eigenvalue is guaranteed by https://en.wikipedia.org/wiki/Perron\xe2\x80\x93Frobenius_theorem\n\n-   aperiodic <http://math.stackexchange.com/questions/112151/what-values-makes-this-markov-chain-aperiodic>\n\n    Aperiodicity is likely for the huge graph of the web, so we forget about it.\n\nProposal to use it on Stack Overflow:\n\n- http://meta.stackexchange.com/questions/28874/applying-pagerank-like-algorithm-to-stack-overflow-votes\n\nPageRank tutorials and papers:\n\n- http://www.cs.princeton.edu/~chazelle/courses/BIB/pagerank.htm\n\nPageRank alternatives:\n\n- https://en.wikipedia.org/wiki/TrustRank Starts from a set of trusted pages. Interesting, as that could be pages / users which were upvoted.\n- https://en.wikipedia.org/wiki/HITS_algorithm separates author from referrer, which could be interesting to give more reputation to those who actually write material.\n- https://www.nayuki.io/page/computing-wikipedias-internal-pageranks Wikipedia internal PageRanks, using a simple proprietary open-source Java PageRank implementation.\n\nPageRank variants:\n\n-   topic sensitive TODO understand better. Seems to modify the damping biasing to favour some pre-determined pages, on the paper based on DMOZ human consensus classification (no upvotes, just politics)\n    - we could use something like that but based on votes of a given user, but it could be too expensive\n    - http://www-cs-students.stanford.edu/~taherh/papers/topic-sensitive-pagerank.pdf Contains a great explanation of PageRank.\n    - http://drops.dagstuhl.de/volltexte/2007/1072/pdf/07071.VignaSebastiano.Paper.1072.pdf\n    - Seems to use an arbitrary previously fixed number of topics?\n\n## Algorithm possibilities\n\nThe most obvious possibility is to reduce the problem to pagerank.\n\nIf we forget tags to simplify, we could do a bipartite authors / posts graph:\n\n- each post and user is node in one side of the bipartite graph\n- if userN upvotes postN, add a link from userN to postN\n- link postN to it\'s author userN\n\nTo consider tags without weight, in addition:\n\n- each user is represented by one node per tag userN-tagM\n- if userN upvotes postN, add a link from userN-tagM to postN if postN is tagged with tagM\n- link from postN to each userN-tagM where userN is the autor and tagM a tag of the post\n\n## Tag hierarchy extraction\n\nWe could be able to deduce that `animal` includes `dog`, is a lot of articles tagged as \n\n- Tibeli 2013 http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0084133\n\n## Websites with tag votes by any user\n\n- Flickr 2016 only photo author can add tags\n- Delicious TODO down?\n\n## Datasets\n\n- https://en.wikipedia.org/wiki/DMOZ http://www.dmoz.org/ http://c2.com/cgi/wiki?OpenDirectoryProject\n\n## Business model\n\n### Consulting\n\nStart with consulting for universities to get some cash flowing.\n\nHelp teachers create perfect courses.\n\nAt the same time, develop the website, and use the generated content to bootstrap it.\n\nChoose a domain of knowledge, generate perfect courses for it, and find all teachers of the domain in the world who are teaching that and help them out.\n\nThen expand out to other domains.\n\nTODO: which domain of knowledge should we go for? The more precise the better.\n\n- maths is perfect because it "never" changes. But does not make money.\n- computer science might be good, e.g. machine learning.\n\n### Knowledge market\n\nIf enough people use it, we can let people sell courses through us, to become the YouTube of courses.\n\nTeachers have the incentive of making open source to get more students.\n\nStudents pay when they want help to learn something.\n\n### Who to propose this to\n\n<https://catalogue.polytechnique.fr/cours.php?id=2913>\n\n<http://psc.polytechnique.fr/>\n\n### Ads\n\nPossibly shared with top content producers, like Tsu.\n\nPlus a paid option to opt out of ads.\n\nBut this is what YouTube does with videos, and it only pays for a ton of views...\n'