b"![http://mpv.io/](https://raw.githubusercontent.com/mpv-player/mpv.io/master/source/images/mpv-logo-128.png)\n\n## mpv\n\n--------------\n\n\n* [Overview](#overview)\n* [Downloads](#downloads)\n* [Changelog](#changelog)\n* [Compilation](#compilation)\n* [FFmpeg vs. Libav](#ffmpeg-vs-libav)\n* [Release cycle](#release-cycle)\n* [Bug reports](#bug-reports)\n* [Contributing](#contributing)\n* [Relation to MPlayer and mplayer2](#relation-to-mplayer-and-mplayer2)\n* [Wiki](https://github.com/mpv-player/mpv/wiki)\n* [FAQ](https://github.com/mpv-player/mpv/wiki/FAQ)\n* [Man pages](http://mpv.io/manual/master/)\n* [Contact](#contact)\n* [License](#license)\n\n## Overview\n\n\n**mpv** is a media player based on MPlayer and mplayer2. It supports a wide\nvariety of video file formats, audio and video codecs, and subtitle types.\n\nReleases can be found on the [release list][releases].\n\n## System requirements\n\n- A not too ancient Linux, or Windows Vista or later, or OSX 10.8 or later.\n- A somewhat capable CPU. Hardware decoding might sometimes help if the CPU\n  is too slow to decode video realtime, but must be explicitly enabled with\n  the `--hwdec` option. On Windows, a CPU with SSE4 instruction set is required\n  to get decent hardware decoding performance.\n- A not too crappy GPU. mpv is not intended to be used with bad GPUs. There are\n  many caveats with drivers or system compositors causing tearing, stutter,\n  etc. On Windows, you might want to make sure the graphics drivers are\n  current, especially OpenGL. In some cases, ancient fallback video output\n  methods can help (such as `--vo=xv` on Linux), but this use is not\n  recommended or supported.\n\n\n## Downloads\n\n\nFor semi-official builds and third-party packages please see\n[mpv.io](http://mpv.io/installation/).\n\n## Changelog\n\n\nThere is no completely changelog, however changes to the player core interface\nare listed in the [interface changelog][interface-changes].\n\nChanges to the C API are documented in the [client API changelog][api-changes].\n\nThe [release list][releases] has a summary of most of the important changes\non every release.\n\nChanges to the default key bindings are inidcated in\n[restore-old-bindings.conf][restore-old-bindings].\n\n## Compilation\n\n\nCompiling with full features requires development files for several\nexternal libraries. Below is a list of some important requirements.\n\nThe mpv build system uses *waf* but we don't store it in your source tree. The\nscript './bootstrap.py' will download the latest version of waf that was tested\nwith the build system.\n\nFor a list of the available build options use `./waf configure --help`. If\nyou think you have support for some feature installed but configure fails to\ndetect it, the file `build/config.log` may contain information about the\nreasons for the failure.\n\nNOTE: To avoid cluttering the output with unreadable spam, `--help` only shows\none of the two switches for each option. If the option is autodetected by\ndefault, the `--disable-***` switch is printed; if the option is disabled by\ndefault, the `--enable-***` switch is printed. Either way, you can use\n`--enable-***` or `--disable-**` regardless of what is printed by `--help`.\n\nTo build the software you can use `./waf build`: the result of the compilation\nwill be located in `build/mpv`. You can use `./waf install` to install mpv\nto the *prefix* after it is compiled.\n\nEssential dependencies (incomplete list):\n\n- gcc or clang\n- X development headers (xlib, X extensions, libvdpau, libGL, libXv, ...)\n- Audio output development headers (libasound/ALSA, pulseaudio)\n- FFmpeg libraries (libavutil libavcodec libavformat libswscale libavfilter\n  and either libswresample or libavresample)\n  At least FFmpeg 3.2.2 or Libav 12 is required.\n- zlib\n- iconv (normally provided by the system libc)\n- libass (OSD, OSC, text subtitles)\n- Lua (optional, required for the OSC pseudo-GUI and youtube-dl integration)\n- libjpeg (optional, used for screenshots only)\n- uchardet (optional, for subtitle charset detection)\n- vdpau and vaapi libraries for hardware decoding on Linux (optional)\n\nLibass dependencies:\n\n- gcc or clang, yasm on x86 and x86_64\n- fribidi, freetype, fontconfig development headers (for libass)\n- harfbuzz (optional, required for correct rendering of combining characters,\n  particularly for correct rendering of non-English text on OSX, and\n  Arabic/Indic scripts on any platform)\n\nFFmpeg dependencies:\n\n- gcc or clang, yasm on x86 and x86_64\n- OpenSSL (has to be explicitly enabled when compiling ffmpeg)\n- libx264/libmp3lame/libfdk-aac if you want to use encoding (has to be\n  explicitly enabled when compiling ffmpeg)\n- Libav also works, but some features will not work. (See section below.)\n\nMost of the above libraries are available in suitable versions on normal\nLinux distributions. However FFmpeg is an exception (distro versions may be\ntoo old to work at all or work well). For that reason you may want to use\nthe separately available build wrapper ([mpv-build][mpv-build]) that first compiles FFmpeg\nlibraries and libass, and then compiles the player statically linked against\nthose.\n\nIf you want to build a Windows binary, you either have to use MSYS2 and MinGW,\nor cross-compile from Linux with MinGW. See [Windows compilation][windows_compilation].\n\n\n## FFmpeg vs. Libav\n\n\nGenerally, mpv should work with the latest release as well as the git version\nof both FFmpeg and Libav. But FFmpeg is preferred, and some mpv features work\nwith FFmpeg only (subtitle formats in particular).\n\n\n## Preferred FFmpeg version\n\n\nUsing the latest FFmpeg release (or FFmpeg git master) is strongly recommended.\nOlder versions are unsupported, even if the build system still happens to\naccept them. The main reason mpv still builds with older FFmpeg versions is to\nevade arguing with people (users, distros) who insist on using older FFmpeg\nversions for no rational reason.\n\nIf you want to use a stable FFmpeg release, use the latest release, which has\nmost likely the best maintenance out of all stable releases. Older releases\nare for distros, and at best receive basic changes like fixing critical security\nissues or build fixes, and at worst are completely abandoned.\n\n## FFmpeg ABI compatibility\n\nmpv does not support linking against FFmpeg versions it was not built with, even\nif the linked version is supposedly ABI-compatible with the version it was\ncompiled against. Expect malfunctions, crashes, and security issues if you\ndo it anyway.\n\nThe reason for not supporting this is because it creates far too much complexity\nwith little to no benefit, coupled with absurd and unusable FFmpeg API\nartifacts.\n\nNewer mpv versions will refuse to start if runtime and compile time FFmpeg\nlibrary versions mismatch.\n\n## Release cycle\n\nEvery other month, an arbitrary git snapshot is made, and is assigned\na 0.X.0 version number. No further maintenance is done.\n\nThe goal of releases is to make Linux distributions happy. Linux distributions\nare also expected to apply their own patches in case of bugs and security\nissues.\n\nReleases other than the latest release are unsupported and unmaintained.\n\nSee the [release policy document][release-policy] for more information.\n\n## Bug reports\n\n\nPlease use the [issue tracker][issue-tracker] provided by GitHub to send us bug\nreports or feature requests.\n\n## Contributing\n\n\nFor small changes you can just send us pull requests through GitHub. For bigger\nchanges come and talk to us on IRC before you start working on them. It will\nmake code review easier for both parties later on.\n\n## Relation to MPlayer and mplayer2\n\n\nmpv is based on mplayer2, which in turn is based on the original MPlayer\n(also called mplayer, mplayer-svn, mplayer1). Many changes have been made, a\nlarge part of which is incompatible or completely changes how the player\nbehaves. Although there are still many similarities to its ancestors, mpv\nshould generally be treated as a completely different program.\n\nmpv was forked because we wanted to modernize MPlayer. This includes\nremoving cruft (including features which stopped making sense 10 years ago),\nand of course adding modern features. Such huge and intrusive changes made it\ninfeasible to work directly with MPlayer, which is mostly focused on\npreservation, so a fork had to be made. (Actually, mpv is based on mplayer2,\nwhich already started this process of removing cruft.)\n\nIn general, mpv should be considered a completely new program, rather than a\nMPlayer drop-in replacement.\n\nIf you are wondering what's different from mplayer2 and MPlayer, an incomplete\nand now unmaintained list of changes is located [here][mplayer-changes].\n\n## Contact\n\n\nMost activity happens on the IRC channel and the github issue tracker. The\nmailing lists are mostly unused.\n\n - **GitHub issue tracker**: [issue tracker][issue-tracker] (report bugs here)\n - **User IRC Channel**: `#mpv` on `irc.freenode.net`\n - **Developer IRC Channel**: `#mpv-devel` on `irc.freenode.net`\n\nTo contact the `mpv` team in private write to `mpv-team@googlegroups.com`. Use\nonly if discretion is required.\n\n[releases]: https://github.com/mpv-player/mpv/releases\n[mpv-build]: https://github.com/mpv-player/mpv-build\n[homebrew-mpv]: https://github.com/mpv-player/homebrew-mpv\n[issue-tracker]:  https://github.com/mpv-player/mpv/issues\n[ffmpeg_vs_libav]: https://github.com/mpv-player/mpv/wiki/FFmpeg-versus-Libav\n[release-policy]: https://github.com/mpv-player/mpv/blob/master/DOCS/release-policy.md\n[windows_compilation]: https://github.com/mpv-player/mpv/blob/master/DOCS/compile-windows.md\n[mplayer-changes]: https://github.com/mpv-player/mpv/blob/master/DOCS/mplayer-changes.rst\n[interface-changes]: https://github.com/mpv-player/mpv/blob/master/DOCS/interface-changes.rst\n[api-changes]: https://github.com/mpv-player/mpv/blob/master/DOCS/client-api-changes.rst\n[restore-old-bindings]: https://github.com/mpv-player/mpv/blob/master/etc/restore-old-bindings.conf\n\n## License\n\n\nMostly GPLv2 or later. See [details.](https://github.com/mpv-player/mpv/blob/master/Copyright)\n"